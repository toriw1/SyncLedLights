# /etc/asound.conf
# Author: Jason Gray
# GitHub: https://github.com/JasonLG1979
# sc_asound.conf will be placed as asound.conf by install.py

# add:
# snd-aloop
# to a new line in /etc/modules
# reboot.

# use aplay -l to determine the below.

# Change to the card number that you want to be the default control card.
# Default: 0
defaults.ctl.card 0

# Change to the card number that you want to be the default playback card.
# It should usually be the same as defaults.ctl.card.
# Default: 0
defaults.pcm.card 0

# Change to the device number that you want to be the default device on the default card.
# 0 or 1 is usually the correct device number.
# Default: 0
defaults.pcm.device 0

# Change to the subdevice number that you want to be the default subdevice on the default device.
# Should rarely need to be changed.
# Default: -1
defaults.pcm.subdevice -1

# To install high quality samplerate converters on Debian based systems:
# sudo apt install -y --no-install-recommends libasound2-plugins

# To list available rate converters:
# echo "$(ls /usr/lib/*/alsa-lib | grep "libasound_module_rate_")" | sed -e "s/^libasound_module_rate_//" -e "s/.so$//"

# Uncomment and replace speexrate_medium with the rate_converter of your choice. (speexrate and speexrate_medium offer the best "bang for your buck")
# defaults.pcm.rate_converter speexrate_medium

# Find your card's supported format(s) and sampling rate(s) While no other audio is being played:
# aplay -Dhw:<card #>,<device #> --dump-hw-params /usr/share/sounds/alsa/Front_Right.wav
# For example:
# aplay -Dhw:0,0 --dump-hw-params /usr/share/sounds/alsa/Front_Right.wav

# The output should look something like this if the card and device combination is correct:

# ACCESS:  MMAP_INTERLEAVED RW_INTERLEAVED
# FORMAT:  IEC598_SUBFRAME_LE
# SUBFORMAT:  STD
# SAMPLE_BITS: [16 32]
# FRAME_BITS: [32 64]
# CHANNELS: 2
# RATE: [32000 48000]
# ...

# The above card supports formats S16_LE, S24_LE, and S32_LE, at up to a sampling rate of 192000.

# Change to desired sampling rate and format.
# Default is 44100. Change to 48000 if you're having trouble.
defaults.pcm.dmix.rate 44100
defaults.pcm.dmix.format S16_LE

# To install high quality samplerate converters on Debian based systems:
# sudo apt install -y --no-install-recommends libasound2-plugins

# To list available rate_converter's:
# echo "$(ls /usr/lib/*/alsa-lib | grep "libasound_module_rate_")" | sed -e "s/^libasound_module_rate_//" -e "s/.so$//"

# Uncomment and replace speexrate_medium with the rate_converter of your choice.
# defaults.pcm.rate_converter speexrate_medium

# Once everything is configure close and save this file and test with:
# speaker-test -c2 -l1

# While audio is playing you can verify your settings with:
# cat /proc/asound/card*/pcm*p/sub*/hw_params

pcm.playback {
    type hw
    card {
        @func refer
        name defaults.pcm.card
    }
    device {
        @func refer
        name defaults.pcm.device
    }
    subdevice {
        @func refer
        name defaults.pcm.subdevice
    }
}

pcm.loopback0 {
    type hw
    card Loopback
    device 0
    subdevice -1
}

pcm.loopback1 {
    type hw
    card Loopback
    device 1
    subdevice -1
}

pcm.playbackdmixer {
    type dmix
    ipc_key_add_uid false
    ipc_perm 0666
    ipc_key 1024
    slave {
        pcm playback
        channels 2
        rate {
            @func refer
            name defaults.pcm.dmix.rate
        }
        format {
            @func refer
            name defaults.pcm.dmix.format
        }
        period_size 0
        buffer_size 0
        buffer_time 0
        period_time 250000
        periods 4
    }
    bindings {
        0 0
        1 1
    }
}

pcm.loopbackdmixer {
    type dmix
    ipc_key_add_uid false
    ipc_perm 0666
    ipc_key 1025
    slave {
        pcm loopback0
        channels 2
        rate {
            @func refer
            name defaults.pcm.dmix.rate
        }
        format {
            @func refer
            name defaults.pcm.dmix.format
        }
        period_size 0
        buffer_size 0
        buffer_time 0
        period_time 250000
        periods 4
    }
    bindings {
        0 0
        1 1
    }
}

pcm.bluetooth {
    type plug
    slave.pcm {
        type bluealsa
        device 4,0
    }
}


pcm.playbacksplitter {
    type plug
    slave.pcm {
        type multi
        slaves.playback.pcm playbackdmixer
        slaves.playback.channels 2
        slaves.loopback.pcm loopbackdmixer
        slaves.loopback.channels 2
	slaves.bluetooth.pcm bluetooth
	slaves bluetooth.channels 2
        bindings.0.slave playback
        bindings.0.channel 0
        bindings.1.slave playback
        bindings.1.channel 1
        bindings.2.slave loopback
        bindings.2.channel 0
        bindings.3.slave loopback
        bindings.3.channel 1
	bindings.4.slave bluetooth     # Add this line for Bluetooth
        bindings.4.channel 0           # Add this line for Bluetooth
        bindings.5.slave bluetooth     # Add this line for Bluetooth
        bindings.5.channel 1           # Add this line for Bluetooth
    }
    ttable {
        # stereo for playback
        0.0 1
        1.1 1
        # dual mono for loopback
        0.2 0.5
        1.2 0.5
        0.3 0.5
        1.3 0.5
	# stereo for Bluetooth
        0.4 1
        1.5 1
    }
}

pcm.!default {
    type plug
    slave.pcm "bluetooth"
}

ctl.!default {
    type hw
    card {
        @func refer
        name defaults.ctl.card
    }
}
